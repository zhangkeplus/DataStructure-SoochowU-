1.用带头结点的单链表实现线性表，对线性表进行插入和删除，并显示每次插入或删除后线性表的变化情况
#include<iostream>
using namespace std;
struct LinkNode
{
	int data;
	LinkNode *link;
	LinkNode(LinkNode *ptr=NULL)
	{
		link=ptr;
	}
	LinkNode(const int &item , LinkNode *ptr=NULL)
	{
		data=item;
		link=ptr;
	}
};

class List
{
public:
	List()
	{
		first=new LinkNode;
	}
	List(const int &x)
	{
		first=new LinkNode(x);
	}
	LinkNode * Locate(int i);           //返回第 i 个元素的地址
	bool Insert(int i,const int &x);   //插入x在第 i 个表项之后
	bool Remove(int i,int &x);         //删除第 i 个表项，通过x返回表项的值
	void input();                       //输入
	void output();                      //输出
private:
	LinkNode *first;
};

LinkNode *List::Locate(int i)
{
	if(i<0) return NULL;
	LinkNode * current=first;
	int k=0;
	while(current!=NULL && k<i)
	{
		current=current->link;
		k++;
	}
	return current;
}
bool List::Insert(int i,const int & x)
{
	LinkNode *current=Locate(i);
	if(current==NULL)
		return false;
	else
	{
	    LinkNode * newNode=new LinkNode(x);
	    if(newNode==NULL) {cerr<<"存储分配错误！"<<endl;}
	    newNode->link=current->link;
	    current->link=newNode;
	    return true;
	}
}
bool List::Remove(int i,int & x)
{
	LinkNode * current=Locate(i-1);
	if(current==NULL || current->link==NULL)
		return false;
	else
	{
		LinkNode * del=current->link;
	    current->link=del->link;
	    x=del->data;
	    delete del;
	    return true;
	}
}
void List::input()
{
	cout<<"开始建立单链表，请输入元素的值： "<<endl;
	LinkNode *newNode, *last;
	int val;
	cin>>val;
	last=first;
	while(val!=-1)
	{
		newNode=new LinkNode(val);
		if(newNode==NULL)
		{cerr<<"存储分配错误！"<<endl;}
		else
		{
			last->link=newNode;
			last=newNode;
			cin>>val;
		}
	}
}

void List::output()
{
	LinkNode *current=first->link;            //从first->link开始，因为这是带附件头结点的链表
	while(current!=NULL)
	{
		cout<<current->data<<endl;
		current=current->link;
	}
}

int main()
{
	char temp;
	List a(0);
	a.input ();
	cout<<"是否对表进行插入,Y or N"<<endl;
	cin>>temp;
	while(temp=='Y')
	{
		int m,n;
		cout<<"请输入将要插入第几项之后，以及将插入的数"<<endl;
		cin>>m>>n;
		if(a.Insert (m,n))              
		{
			cout<<"显示插入后的情况："<<endl;
			a.output();
		}
		else
			cout<<"参数不合理，插入失败！"<<endl;
		cout<<"是否对表进行插入,Y or N"<<endl;
		cin>>temp;
	}

	cout<<"是否对表进行删除,Y or N"<<endl;
	cin>>temp;
	while(temp=='Y')
	{
		int m,n;
		cout<<"请输入将要删除第几项"<<endl;
		cin>>m;
		if(a.Remove(m,n))
		{
			cout<<"显示删除后的情况："<<endl;
		    a.output();
		}
		else
			cout<<"参数不合理，删除失败！"<<endl;
		cout<<"是否对表进行删除,Y or N"<<endl;
	    cin>>temp;
	}	
}